# Universal Windows Platform
# Build a Universal Windows Platform project using Visual Studio.
# Add steps that test and distribute an app, save build artifacts, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  group: BuildPipelineVariables
  solution: '**/*.sln'
  buildPlatform: 'x86|x64|ARM|ARM64'
  buildConfiguration: 'Release'
  appxPackageDir: '$(build.artifactStagingDirectory)\AppxPackages\\'

jobs:
- job: Build
  timeoutInMinutes: 120
  steps:

  # - task: NuGetToolInstaller@1

  # - task: NuGetCommand@2
  #   inputs:
  #     restoreSolution: '**/*.wapproj'

  - task: MSBuild@1
    displayName: 'Restore nuget'
    inputs:
      solution: '**/*.sln'
      msbuildVersion: '16.0'
      msbuildArchitecture: 'x86'
      configuration: '$(buildConfiguration)'
      msbuildArguments: '/t:restore'
      logProjectEvents: true
      createLogFile: true

  - task: MSBuild@1
    displayName: 'Build'
    inputs:
      solution: '**/*.wapproj'
      msbuildVersion: '16.0'
      msbuildArchitecture: 'x86'
      configuration: '$(buildConfiguration)'
      msbuildArguments: '/p:AppxBundlePlatforms="$(buildPlatform)" /p:AppxPackageSigningEnabled=false /p:AppxBundle=Always'
      logProjectEvents: true
      createLogFile: true

#  - task: MSBuild@1
#    displayName: 'Restore nuget for Solution through MSBuild'
#    inputs:
#      solution: '**/*.sln'
#      platform: 'x86'
#      configuration: '$(BuildConfiguration)'
#      msbuildArguments: '/t:restore'
#
#  - task: MSBuild@1
#    displayName: 'Restore nuget for WAPPROJ through MSBuild'
#    inputs:
#      solution: '**/*.wapproj'
#      platform: 'x86'
#      configuration: '$(BuildConfiguration)'
#      msbuildArguments: '/t:restore'

  - task: VSBuild@1
    inputs:
      solution: '**\*.sln'
      platform: 'x86'
      configuration: '$(buildConfiguration)'
      msbuildArgs: '/t:Restore'
      clean: true
      logProjectEvents: false
      maximumCpuCount: false

  - task: VSBuild@1
    inputs:
      solution: '**\*.sln'
      platform: 'x86'
      configuration: '$(buildConfiguration)'
      msbuildArgs: '/t:build;_GenerateAppxPackage /p:AppxBundlePlatforms="$(buildPlatform)" /p:AppxPackageDir="$(appxPackageDir)" /p:AppxBundle=Always /p:UapAppxPackageBuildMode=Sideload /p:AppxPackageSigningEnabled=false'
      clean: false
      logProjectEvents: false
      maximumCpuCount: false

  # - task: MSBuild@1
  #   displayName: 'Build Solution'
  #   inputs:
  #     solution: '**/*.sln'
  #     platform: 'x86'
  #     configuration: '$(buildConfiguration)'
  #     maximumCpuCount: true

  # - task: MSBuild@1
  #   displayName: 'Build MSIX'
  #   inputs:
  #     solution: '**/*.wapproj'
  #     platform: 'x86'
  #     configuration: '$(buildConfiguration)'
  #     msbuildArguments: '/t:build;_GenerateAppxPackage /p:AppxBundlePlatforms="$(buildPlatform)" /p:AppxPackageDir="$(appxPackageDir)" /p:AppxBundle=Always /p:UapAppxPackageBuildMode=Sideload /p:AppxPackageSigningEnabled=false'
  #     maximumCpuCount: true

  - task: VSTest@2
    displayName: 'Tests'
    inputs:
      testSelector: 'testAssemblies'
      testAssemblyVer2: |
        **\*test*.dll
        !**\*TestAdapter.dll
        !**\obj\**
      searchFolder: '$(System.DefaultWorkingDirectory)'
      runInParallel: false
      rerunFailedTests: false

  - task: CopyFiles@2
    displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
    inputs:
      SourceFolder: '$(system.defaultworkingdirectory)'
      Contents: '**\bin\$(BuildConfiguration)\**'
      TargetFolder: '$(build.artifactstagingdirectory)'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: drop'
    inputs:
      PathtoPublish: '$(build.artifactstagingdirectory)'
