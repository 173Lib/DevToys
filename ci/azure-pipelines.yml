# Universal Windows Platform
# Build a Universal Windows Platform project using Visual Studio.
# Add steps that test and distribute an app, save build artifacts, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  group: BuildPipelineVariables
  solution: '**/*.sln'
  buildPlatform: 'x86|x64|ARM|ARM64'
  buildConfiguration: 'Release'
  appxPackageDir: '$(build.artifactStagingDirectory)\AppxPackages\\'

jobs:
- job: Build
  timeoutInMinutes: 240
  steps:

  # Restore nuget package for x86. This should in fact restore packages for every platform.
  - task: MSBuild@1
    displayName: 'Restore x86 nuget'
    inputs:
      solution: '$(solution)'
      platform: 'x86'
      configuration: '$(buildConfiguration)'
      msbuildArguments: '/t:restore'

  # Restoring nugets for every platforms sounds unnecessary but allows to create 'project.assets.json' files for 
  # each platform, which is required in order to build in Release mode.
  - task: MSBuild@1
    displayName: 'Restore x64 nuget'
    inputs:
      solution: '$(solution)'
      platform: 'x64'
      configuration: '$(buildConfiguration)'
      msbuildArguments: '/t:restore'

  - task: MSBuild@1
    displayName: 'Restore arm nuget'
    inputs:
      solution: '$(solution)'
      platform: 'arm'
      configuration: '$(buildConfiguration)'
      msbuildArguments: '/t:restore'

  - task: MSBuild@1
    displayName: 'Restore arm64 nuget'
    inputs:
      solution: '$(solution)'
      platform: 'arm64'
      configuration: '$(buildConfiguration)'
      msbuildArguments: '/t:restore'

  - task: MSBuild@1
    displayName: 'Build solution'
    inputs:
      solution: '$(solution)'
      configuration: '$(buildConfiguration)'
      msbuildArguments: '/t:build;_GenerateAppxPackage /p:AppxBundlePlatforms="$(buildPlatform)" /p:AppxPackageDir="$(appxPackageDir)" /p:AppxPackageSigningEnabled=false /p:AppxBundle=Always'
      maximumCpuCount: true

  # Older version used in this test build https://etienne-baudoux.visualstudio.com/Side%20projects/_build/results?buildId=245
  # - task: MSBuild@1
  #   displayName: 'Build solution'
  #   inputs:
  #     solution: '**/*.sln'
  #     configuration: '$(buildConfiguration)'
  #     msbuildArguments: '/p:AppxBundlePlatforms="$(buildPlatform)" /p:AppxPackageSigningEnabled=false /p:AppxBundle=Always'

  - task: VSTest@2
    displayName: 'Tests'
    inputs:
      testSelector: 'testAssemblies'
      testAssemblyVer2: |
        **\*test*.dll
        !**\*TestAdapter.dll
        !**\obj\**
      searchFolder: '$(System.DefaultWorkingDirectory)'
      runInParallel: false
      rerunFailedTests: false

  - task: CopyFiles@2
    displayName: 'Copy Files to: $(build.artifactstagingdirectory)'
    inputs:
      SourceFolder: '$(system.defaultworkingdirectory)'
      Contents: '**\bin\$(BuildConfiguration)\**'
      TargetFolder: '$(build.artifactstagingdirectory)'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: drop'
    inputs:
      PathtoPublish: '$(build.artifactstagingdirectory)'
